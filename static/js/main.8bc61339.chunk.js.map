{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onPageChange","pagesCount","Math","ceil","pagesArray","Array","from","length","_","i","isFirstPage","isLastPage","_jsxs","className","children","_jsx","cn","disabled","href","onClick","goPrev","map","page","active","concat","goNext","items","to","numbers","n","push","getNumbers","PerPage","App","setPerPage","useState","Five","setCurrentPage","startIndex","endIndex","min","visibleItems","filter","index","value","id","onChange","event","target","Three","Ten","Twenty","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8bc61339.chunk.js","sourcesContent":["import cn from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesCount = Math.ceil(total / perPage);\n  const pagesArray = Array.from({ length: pagesCount }, (_, i) => i + 1);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pagesCount;\n\n  const goPrev = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const goNext = () => {\n    if (currentPage < pagesCount) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: isFirstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={goPrev}\n        >\n          «\n        </a>\n      </li>\n      {pagesArray.map(page => (\n        <li\n          key={page}\n          className={cn('page-item', { active: page === currentPage })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', {\n          disabled: isLastPage,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={goNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nenum PerPage {\n  Three = 3,\n  Five = 5,\n  Ten = 10,\n  Twenty = 20,\n}\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(PerPage.Five);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const total = items.length;\n  const startIndex = (currentPage - 1) * perPage + 1;\n  const endIndex = Math.min(currentPage * perPage, total);\n\n  const visibleItems = items.filter(\n    (_, index) =>\n      index >= (currentPage - 1) * perPage && index < currentPage * perPage,\n  );\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex} - ${endIndex} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={perPage}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handlePerPageChange}\n          >\n            <option value={PerPage.Three}>{PerPage.Three}</option>\n            <option value={PerPage.Five}>{PerPage.Five}</option>\n            <option value={PerPage.Ten}>{PerPage.Ten}</option>\n            <option value={PerPage.Twenty}>{PerPage.Twenty}</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}